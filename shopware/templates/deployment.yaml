apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "shopware.name" . | quote }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shopware
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: shopware
        env: {{ .Values.labels.env }}
        cluster: {{ .Values.labels.cluster }}
    spec:
      containers:
        - name: shopware
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts: {{- include "shopware.volumeMounts" . | nindent 12 }}
            - mountPath: /sw6/config/env
              name: env-config-file
          env: {{- include "shopware.env" . | nindent 12 }}
          command: ["/bin/sh"]
          args:
            [
              "-c",
              "cp /sw6/config/env/sw6 /sw6/.env && \
              bin/entrypoint.sh",
            ]
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
          livenessProbe:
            httpGet:
              path: /fpm-ping
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /fpm-ping
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: shopware-data
          persistentVolumeClaim:
            claimName: {{ include "shopware.name" . | quote }}
        - name: env-config-file
          configMap:
            name: sw6-env-file
      serviceAccountName: {{ include "shopware.serviceAccountName" . | quote }}