apiVersion: apps/v1
kind: Deployment
metadata:
  name: shopware
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shopware
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: shopware
        env: {{ .Values.labels.env }}
        cluster: {{ .Values.labels.cluster }}
    spec:
      containers:
        - name: shopware
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: dev-db-secret
                  key: host
          #  - name: DATABASE_USERNAME
          #    valueFrom:
          #      secretKeyRef:
          #        name: dev-db-secret
          #        key: username
          #  - name: DATABASE_PASSWORD
          #    valueFrom:
          #      secretKeyRef:
          #        name: dev-db-secret
          #        key: password
          #  - name: DATABASE_URL
          #    value: mysql://$(DATABASE_USERNAME):$(DATABASE_PASSWORD)@$(DATABASE_HOST):3306/shopware
          ports:
            - containerPort: 8000
              name: http
              protocol: TCP
          resources:
            limits:
              cpu: 1200m
            requests:
              cpu: 800m
              memory: "100Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5